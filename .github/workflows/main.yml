name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # Gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: run build
      # test는 건너뛰고 build
      run: ./gradlew clean build -x test

       # docker login 설정
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    
    # docker 이미지 빌드 + docker hub push
    - name: build and release to DockerHub
      env:
        NAME: wooju98
        REPO: my-sns
      run: |
        docker build -t $REPO .
        docker tag $REPO $NAME/$REPO
        docker push $NAME/$REPO

 # 배포 스크립트 작성
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]
    steps:
      - name: Docker run
        run: |
              sudo docker ps -q --filter "name=my-sns" | grep -q . && sudo docker stop "my-sns" && sudo docker rmi  "wooju98/my-sns:latest"
              sudo docker run -d --name my-sns --rm -p 8080:8080 \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.EC2_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
              -e JWT_TOKEN_SECRET=${{ secrets.JWT_TOKEN_SECRET }} \
              ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
