name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # Gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: run build
      # test는 건너뛰고 build
      run: ./gradlew clean build -x test

       # docker login 설정
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    
    # docker 이미지 빌드 + docker hub push
    - name: build and release to DockerHub
      run: |
        docker build -t ${{ secrets.DOCKER_REPO }} .
        docker tag ${{ secrets.DOCKER_REPO }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
        
 # 배포 스크립트 작성
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]
    steps:
      - name: Docker run
        run: |
              sudo docker stop ${{ secrets.DOCKER_REPO }}
              sudo docker rm ${{ secrets.DOCKER_REPO }}
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
              sudo docker run -p 8080:8080 -d --name ${{ secrets.DOCKER_REPO }} \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.EC2_HOST }}:3306/my-sns-db \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e JWT_TOKEN_SECRET=${{ secrets.JWT_TOKEN_SECRET }} \
              -e SPRING_DATASOURCE_USERNAME=root \
              ${{secrets.DOCKER_USERNAME}}/${{ secrets.DOCKER_REPO }}:latest
